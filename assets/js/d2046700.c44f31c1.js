"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6948],{7477:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"API/GetChatChannel","title":"GetChatChannel","description":"This API can be used from both the client and the server.","source":"@site/docs/API/GetChatChannel.md","sourceDirName":"API","slug":"/API/GetChatChannel","permalink":"/TT3-Docs/API/GetChatChannel","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7.6,"frontMatter":{"sidebar_position":7.6},"sidebar":"tutorialSidebar","previous":{"title":"ScreenMessage","permalink":"/TT3-Docs/API/ScreenMessage"},"next":{"title":"PlaySound","permalink":"/TT3-Docs/API/PlaySound"}}');var s=t(4848),i=t(8453);const a={sidebar_position:7.6},d="GetChatChannel",c={},h=[{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getchatchannel",children:"GetChatChannel"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"This API can be used from both the client and the server."})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"This API directly returns a function. You should not specify a function name."})}),"\n",(0,s.jsxs)(n.p,{children:["Returns the ",(0,s.jsx)(n.code,{children:"TextChannel"})," with the specified name. Currently there are two channels: ",(0,s.jsx)(n.code,{children:"RBXGeneral"})," and ",(0,s.jsx)(n.code,{children:"RBXSystem"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This function will yield until the instance with the provided name is found. If the instance found is not a ",(0,s.jsx)(n.code,{children:"TextChannel"}),", it will error."]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"channelName"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"The channel name."})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"TextChannel?"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[35],{640:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Classes/Role","title":"Role","description":"A loaded role. You can get a Role object using RoundGetRole().","source":"@site/docs/Classes/Role.md","sourceDirName":"Classes","slug":"/Classes/Role","permalink":"/TT3-Docs/Classes/Role","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Map","permalink":"/TT3-Docs/Classes/Map"},"next":{"title":"Item","permalink":"/TT3-Docs/Classes/Items/Item"}}');var s=r(4848),i=r(8453);const l={sidebar_position:5},d="Role",o={},c=[{value:"Kind",id:"kind",level:2},{value:"Definition",id:"definition",level:2},{value:"IsAlliedWith",id:"isalliedwith",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"GetFormattedName",id:"getformattedname",level:2},{value:"Returns",id:"returns-1",level:3},{value:"GetPluralName",id:"getpluralname",level:2},{value:"Returns",id:"returns-2",level:3},{value:"GetExclamatoryString",id:"getexclamatorystring",level:2},{value:"Returns",id:"returns-3",level:3},{value:"FormatString",id:"formatstring",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-4",level:3}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"role",children:"Role"})}),"\n",(0,s.jsxs)(t.p,{children:["A loaded role. You can get a ",(0,s.jsx)(t.code,{children:"Role"})," object using ",(0,s.jsx)(t.code,{children:"Round:GetRoleFromRoleName()"}),", or through ",(0,s.jsx)(t.code,{children:"Participant:GetRole()"}),"."]}),"\n",(0,s.jsx)(t.h1,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h2,{id:"kind",children:"Kind"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:'Type: "Role"'})}),"\n",(0,s.jsx)(t.p,{children:'Always set to "Role". Used to differentiate between classes.'}),"\n",(0,s.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"Type: RoleDefinition"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"RoleDefinition"})," of the role."]}),"\n",(0,s.jsx)(t.h1,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h2,{id:"isalliedwith",children:"IsAlliedWith"}),"\n",(0,s.jsx)(t.p,{children:"Returns true if the role is allied with the given role."}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"role"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Role"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"The role to check."})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"boolean"})}),"\n",(0,s.jsx)(t.h2,{id:"getformattedname",children:"GetFormattedName"}),"\n",(0,s.jsx)(t.p,{children:"Returns the name of the role, formatted with the role color using rich text."}),"\n",(0,s.jsx)(t.h3,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})}),"\n",(0,s.jsx)(t.h2,{id:"getpluralname",children:"GetPluralName"}),"\n",(0,s.jsx)(t.p,{children:"Returns the plural form of the role name, unformatted."}),"\n",(0,s.jsx)(t.h3,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})}),"\n",(0,s.jsx)(t.h2,{id:"getexclamatorystring",children:"GetExclamatoryString"}),"\n",(0,s.jsxs)(t.p,{children:["Returns ",(0,s.jsx)(t.code,{children:'"!"'})," if ",(0,s.jsx)(t.code,{children:"RoleDefinition.IsExclamatory"})," is true, ",(0,s.jsx)(t.code,{children:'"."'})," otherwise."]}),"\n",(0,s.jsx)(t.h3,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})}),"\n",(0,s.jsx)(t.h2,{id:"formatstring",children:"FormatString"}),"\n",(0,s.jsx)(t.p,{children:"Returns the string, formatted with the role color using rich text."}),"\n",(0,s.jsx)(t.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"str"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"The string to format."})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>d});var n=r(6540);const s={},i=n.createContext(s);function l(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[328],{4110:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"API/GetMapThing","title":"GetMapThing","description":"This API can be used from both the client and the server.","source":"@site/docs/API/GetMapThing.md","sourceDirName":"API","slug":"/API/GetMapThing","permalink":"/TT3-Docs/API/GetMapThing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"GetRound","permalink":"/TT3-Docs/API/GetRound"},"next":{"title":"Notification","permalink":"/TT3-Docs/API/Notification"}}');var r=n(4848),s=n(8453);const d={sidebar_position:6},a="GetMapThing",o={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getmapthing",children:"GetMapThing"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"This API can be used from both the client and the server."})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"This API directly returns a function. You should not specify a function name."})}),"\n",(0,r.jsx)(t.p,{children:"Returns a MapThing, given a descendant instance (or the instance itself), and a tag to search for. This is often used to find a character model, given a character part, or a prop, given a prop part."}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"descendant"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Instance"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"The descendant instance (or the instance itself) of the MapThing to find."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"tag"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"The tag to search for."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"MapThing?"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function d(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);
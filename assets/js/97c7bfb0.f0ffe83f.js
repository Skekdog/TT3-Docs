"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6759],{6920:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"API/Using APIs","title":"Using APIs","description":"The public APIs are designed to be easily accessible and usable no matter the context. To use an API, you can either import all APIs like so:","source":"@site/docs/API/Using APIs.md","sourceDirName":"API","slug":"/API/Using APIs","permalink":"/TT3-Docs/API/Using APIs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Intro","permalink":"/TT3-Docs/API/Intro"},"next":{"title":"Secret APIs","permalink":"/TT3-Docs/API/Hidden APIs"}}');var a=t(4848),o=t(8453);const r={sidebar_position:2},i="Using APIs",c={},l=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"using-apis",children:"Using APIs"})}),"\n",(0,a.jsx)(n.p,{children:"The public APIs are designed to be easily accessible and usable no matter the context. To use an API, you can either import all APIs like so:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal API = require(ReplicatedStorage.API)\n'})}),"\n",(0,a.jsx)(n.p,{children:"or import a specific API like so:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal APIName = require(ReplicatedStorage.API.APIName)\n'})}),"\n",(0,a.jsx)(n.p,{children:"When you have imported an API, you can then proceed to use it as documented. In general, this is either:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:"API.FunctionName(params) -- for module APIs\n-- or\nAPI(params) -- for function APIs\n"})}),"\n",(0,a.jsx)(n.p,{children:"In the end, you will end up with something like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'-- At the top of the script\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal API = require(ReplicatedStorage.API)\n\n-- ...somewhere else in the script\nAPI.Combat.MakeExplosion(explosionParams)\n'})}),"\n",(0,a.jsx)(n.p,{children:"or"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",children:'-- At the top of the script\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Combat = require(ReplicatedStorage.API.Combat)\n\n-- ...somewhere else in the script\nCombat.MakeExplosion(explosionParams)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(6540);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);
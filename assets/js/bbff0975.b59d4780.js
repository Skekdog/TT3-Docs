"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4642],{2179:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"API/GetAssemblyMass","title":"GetAssemblyMass","description":"This API can be used from both the client and the server.","source":"@site/docs/API/GetAssemblyMass.md","sourceDirName":"API","slug":"/API/GetAssemblyMass","permalink":"/TT3-Docs/API/GetAssemblyMass","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6.5,"frontMatter":{"sidebar_position":6.5},"sidebar":"tutorialSidebar","previous":{"title":"GetMapObject","permalink":"/TT3-Docs/API/GetMapObject"},"next":{"title":"GetMaterial","permalink":"/TT3-Docs/API/GetMaterial"}}');var r=s(4848),i=s(8453);const o={sidebar_position:6.5},d="GetAssemblyMass",c={},a=[{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4}];function l(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getassemblymass",children:"GetAssemblyMass"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"This API can be used from both the client and the server."})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"This API directly returns a function. You should not specify a function name."})}),"\n",(0,r.jsx)(t.admonition,{type:"warning",children:(0,r.jsx)(t.p,{children:"This API is expensive! Avoid calling it too often, such as every frame. It is fine to use otherwise."})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"part"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"BasePart"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"A part of the assembly to get the mass of. Does not need to be the assembly root."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"countRopes"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean?"})}),(0,r.jsx)(t.td,{}),(0,r.jsxs)(t.td,{children:["If ",(0,r.jsx)(t.code,{children:"true"}),", the mass of parts connected by ropes will be counted."]})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"number"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>d});var n=s(6540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8186],{3579:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Gamemodes/AmmoDefinition","title":"AmmoDefinition","description":"Defines an ammo type that can be used by guns.","source":"@site/docs/Gamemodes/AmmoDefinition.md","sourceDirName":"Gamemodes","slug":"/Gamemodes/AmmoDefinition","permalink":"/TT3-Docs/Gamemodes/AmmoDefinition","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"GamemodeDefinition","permalink":"/TT3-Docs/Gamemodes/GamemodeDefinition"},"next":{"title":"RoleDefinition","permalink":"/TT3-Docs/Gamemodes/RoleDefinition"}}');var t=i(4848),s=i(8453);const a={sidebar_position:3},d="AmmoDefinition",r={},c=[{value:"Properties",id:"properties",level:2},{value:"Kind",id:"kind",level:3},{value:"Name",id:"name",level:3},{value:"DisplayName",id:"displayname",level:3},{value:"Capacity",id:"capacity",level:3},{value:"ReserveCapacity",id:"reservecapacity",level:3},{value:"CanDrop",id:"candrop",level:3},{value:"Model",id:"model",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ammodefinition",children:"AmmoDefinition"})}),"\n",(0,t.jsx)(n.p,{children:"Defines an ammo type that can be used by guns."}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"kind",children:"Kind"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'Type: "Ammo"'})}),"\n",(0,t.jsx)(n.p,{children:'Always set to "Ammo". Used to differentiate between classes.'}),"\n",(0,t.jsx)(n.h3,{id:"name",children:"Name"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Type: string"})}),"\n",(0,t.jsx)(n.p,{children:"The internal name of the ammo."}),"\n",(0,t.jsx)(n.h3,{id:"displayname",children:"DisplayName"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Type: string?"})}),"\n",(0,t.jsxs)(n.p,{children:["The name that will be displayed in the UI. If not set, ",(0,t.jsx)(n.code,{children:"Name"})," will be used instead."]}),"\n",(0,t.jsx)(n.h3,{id:"capacity",children:"Capacity"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Type: number"})}),"\n",(0,t.jsx)(n.p,{children:"The maximum amount of ammo that can be stored in a single clip."}),"\n",(0,t.jsx)(n.h3,{id:"reservecapacity",children:"ReserveCapacity"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Type: number"})}),"\n",(0,t.jsx)(n.p,{children:"The maximum amount of ammo that can be stored in reserve (doesn't count ammo in the clip)."}),"\n",(0,t.jsx)(n.h3,{id:"candrop",children:"CanDrop"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Type: boolean"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the ammo can be dropped as an ammo box."}),"\n",(0,t.jsx)(n.h3,{id:"model",children:"Model"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Type: MapObject?"})}),"\n",(0,t.jsx)(n.p,{children:"The model of the ammo."})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var o=i(6540);const t={},s=o.createContext(t);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);
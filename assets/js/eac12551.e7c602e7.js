"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[36],{7271:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"API/ScreenMessage","title":"ScreenMessage","description":"This API can be used from both the client and the server.","source":"@site/docs/API/ScreenMessage.md","sourceDirName":"API","slug":"/API/ScreenMessage","permalink":"/TT3-Docs/API/ScreenMessage","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7.5,"frontMatter":{"sidebar_position":7.5},"sidebar":"tutorialSidebar","previous":{"title":"Notification","permalink":"/TT3-Docs/API/Notification"},"next":{"title":"PlaySound","permalink":"/TT3-Docs/API/PlaySound"}}');var r=n(4848),i=n(8453);const d={sidebar_position:7.5},c=void 0,o={},l=[{value:"Formats",id:"formats",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function a(e){const t={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsx)(t.p,{children:"This API can be used from both the client and the server."})}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:"This API directly returns a function. You should not specify a function name."})}),"\n",(0,r.jsxs)(t.p,{children:["Displays an on-screen message to the player, with a specified format. Returns ",(0,r.jsx)(t.code,{children:"nil"})," when called from the server, returns the resulting ",(0,r.jsx)(t.code,{children:"TextLabel"})," when called from the client."]}),"\n",(0,r.jsxs)(t.p,{children:["If format overrides are provided, they will be applied to the resulting ",(0,r.jsx)(t.code,{children:"TextLabel"}),". Note that ",(0,r.jsx)(t.code,{children:"Position"})," and ",(0,r.jsx)(t.code,{children:"AnchorPoint"})," are not overridable."]}),"\n",(0,r.jsx)(t.h2,{id:"formats",children:"Formats"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Standard"}),": A standard message in white text with a black stroke."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Error"}),": An error message in red text."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Info"}),": An info message in blue text."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Success"}),": A success message in green text."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Warn"}),": A warning message in orange text."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"message"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"The message to display."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"format"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Format"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"The format to display the message in."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"formatOverrides"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{LabelProperties: {[TextLabelProperty]: TextLabelPropertyValue}}?"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"A table of overrides to apply to the resulting TextLabel."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"to"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Player?"})}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"The player to display the message to. No effect when specified on the client. Must be provided when called from the server."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"TextLabel?"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>c});var s=n(6540);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);
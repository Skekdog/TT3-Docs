"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[558],{1664:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Classes/Types/DamageParams","title":"DamageParams","description":"DamageParams is a table that contains parameters for dealing damage to props or participants. When a DamageParams is passed to a function, you are able to modify the parameters.","source":"@site/docs/Classes/Types/DamageParams.md","sourceDirName":"Classes/Types","slug":"/Classes/Types/DamageParams","permalink":"/TT3-Docs/Classes/Types/DamageParams","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"GamemodeDefinition","permalink":"/TT3-Docs/Gamemodes/GamemodeDefinition"},"next":{"title":"CorpseIcon","permalink":"/TT3-Docs/Classes/Types/CorpseIcon"}}');var i=n(4848),s=n(8453);const r={sidebar_position:1},o="DamageParams",d={},l=[{value:"Properties",id:"properties",level:2},{value:"Amount",id:"amount",level:3},{value:"Attacker",id:"attacker",level:3},{value:"Source",id:"source",level:3},{value:"IsHeadshot",id:"isheadshot",level:3},{value:"Origin",id:"origin",level:3},{value:"HitPosition",id:"hitposition",level:3},{value:"HitPart",id:"hitpart",level:3},{value:"IgnoreKarma",id:"ignorekarma",level:3},{value:"IgnoreSelfDefense",id:"ignoreselfdefense",level:3},{value:"IgnoreScore",id:"ignorescore",level:3}];function c(e){const a={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"damageparams",children:"DamageParams"})}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:"DamageParams"})," is a table that contains parameters for dealing damage to props or participants. When a ",(0,i.jsx)(a.code,{children:"DamageParams"})," is passed to a function, you are able to modify the parameters."]}),"\n",(0,i.jsx)(a.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(a.h3,{id:"amount",children:"Amount"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: number"})}),"\n",(0,i.jsx)(a.p,{children:"The amount of damage to deal."}),"\n",(0,i.jsx)(a.h3,{id:"attacker",children:"Attacker"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: Participant?"})}),"\n",(0,i.jsx)(a.p,{children:"The attacking participant."}),"\n",(0,i.jsx)(a.h3,{id:"source",children:"Source"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: DamageSource"})}),"\n",(0,i.jsx)(a.p,{children:"The damage source."}),"\n",(0,i.jsx)(a.h3,{id:"isheadshot",children:"IsHeadshot"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: boolean?"})}),"\n",(0,i.jsx)(a.p,{children:"If true, and the damage is fatal, the death will count as a headshot, meaning death screams will be muted and the corpse will display a headshot."}),"\n",(0,i.jsx)(a.h3,{id:"origin",children:"Origin"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: Vector3?"})}),"\n",(0,i.jsx)(a.p,{children:"The position from where the damage was dealt (i.e, the attacker's position if the participant is being shot)."}),"\n",(0,i.jsx)(a.h3,{id:"hitposition",children:"HitPosition"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: Vector3?"})}),"\n",(0,i.jsx)(a.p,{children:"The position where the damage was dealt (i.e, the position where the bullet hit the participant)."}),"\n",(0,i.jsx)(a.h3,{id:"hitpart",children:"HitPart"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: BasePart?"})}),"\n",(0,i.jsx)(a.p,{children:"The part where the damage was dealt (i.e, the part where the bullet hit the participant)."}),"\n",(0,i.jsx)(a.h3,{id:"ignorekarma",children:"IgnoreKarma"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: boolean?"})}),"\n",(0,i.jsx)(a.p,{children:"If true, karma will not be affected by the damage."}),"\n",(0,i.jsx)(a.admonition,{type:"info",children:(0,i.jsxs)(a.p,{children:["This does ",(0,i.jsx)(a.strong,{children:"not"})," determine whether karma will affect the damage dealt."]})}),"\n",(0,i.jsx)(a.h3,{id:"ignoreselfdefense",children:"IgnoreSelfDefense"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: boolean?"})}),"\n",(0,i.jsx)(a.p,{children:"If true, this will not apply self-defense against the attacker."}),"\n",(0,i.jsx)(a.h3,{id:"ignorescore",children:"IgnoreScore"}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Type: boolean?"})}),"\n",(0,i.jsx)(a.admonition,{type:"note",children:(0,i.jsx)(a.p,{children:"This does not currently function."})}),"\n",(0,i.jsx)(a.p,{children:"If true, score will not be affected by the damage."})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>o});var t=n(6540);const i={},s=t.createContext(i);function r(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);